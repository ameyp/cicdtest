name: Deploy the server
run-name: Deploy ${{ github.ref_name }}

on:
  workflow_dispatch:

jobs:
  determine-hotfix:
    name: Determine whether the commit is a hotfix
    runs-on: ubuntu-latest
    outputs:
      is_hotfix: ${{ steps.check-commit.outputs.is_hotfix == '1' }}
    steps:
    - uses: actions/checkout@v3.1.0
      with:
        # Fetch history for all branches and tags
        fetch-depth: 0

    - name: Check if commit is a hotfix
      id: check-commit
      shell: bash
      run: |
        echo "is_hotfix=$(scripts/release/is-hotfix.sh ${GITHUB_SHA})" >> $GITHUB_OUTPUT

  build-and-test:
    name: B&T
    needs:
      - determine-hotfix
    uses: ./.github/workflows/build-and-test.yml
    with:
      # hotfix deployments are fast-tracked with a minimal build.
      do_all: ${{ needs.determine-hotfix.outputs.is_hotfix == 'false' }}
      do_apple_ios: true
      do_android: true
      do_client: true
      do_www_docker: true
    secrets: inherit

  deploy-dev:
    name: Deploy to dev
    needs:
      - build-and-test
      - determine-hotfix
    if: ${{ needs.determine-hotfix.outputs.is_hotfix == 'false' }}
    concurrency:
      group: deploy-dev
      cancel-in-progress: true
    secrets: inherit
    uses: ./.github/workflows/deploy.yml
    with:
      gh_env: dev
      aws_env: dev

  test-dev:
    name: Test nightly
    needs:
      - deploy-dev
      - determine-hotfix
    if: ${{ needs.determine-hotfix.outputs.is_hotfix == 'false' }}
    secrets: inherit
    uses: ./.github/workflows/post-deploy-tests.yml
    with:
      environment_name: dev
      tetrahub_url: "https://TODO-replace-me"
      run_e2e: 'nightly'

  deploy-staging:
    name: Deploy to staging
    needs:
      - deploy-dev
    if: always()
    concurrency:
      group: deploy-staging
      cancel-in-progress: true
    secrets: inherit
    uses: ./.github/workflows/deploy.yml
    with:
      gh_env: staging
      aws_env: staging

  test-staging:
    name: Test staging
    needs:
      - deploy-staging
    if: always()
    secrets: inherit
    uses: ./.github/workflows/post-deploy-tests.yml
    with:
      environment_name: staging
      tetrahub_url: "https://TODO-replace-me"
      run_e2e: 'long'

  deploy-prod:
    name: Deploy to prod
    needs:
      - deploy-staging
    if: always()
    concurrency:
      group: deploy-prod
      cancel-in-progress: true
    secrets: inherit
    uses: ./.github/workflows/deploy.yml
    with:
      gh_env: prod
      aws_env: prod

  test-prod:
    name: Test prod
    needs:
      - deploy-prod
    if: always()
    secrets: inherit
    uses: ./.github/workflows/post-deploy-tests.yml
    with:
      environment_name: prod
      tetrahub_url: "https://TODO-replace-me"
      run_e2e: 'none'
