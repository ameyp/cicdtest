##
## This is a re-usable workflow for running post-deployment tests.
##

name: Post-Deployment Test

on:
  # manual trigger
  workflow_dispatch:
    inputs:
      environment_name:
        required: true
        type: choice
        options:
        - sandbox
        - dev
        - staging
        - prod

      tetrahub_url:
        required: true
        type: string

      run_e2e:
        required: true
        type: choice
        options:
        - nightly
        - long
        - none
        default: none

  # workflow triggered by another workflow
  workflow_call:
    # inputs should be the same as above.
    inputs:
      environment_name:
        required: true
        type: string
      tetrahub_url:
        required: true
        type: string
      run_e2e:
        required: true
        type: string

env:
   PYTHON_VERSION: 3.8
   NODE_VERSION: 16

jobs:
  dump_inputs:
    name: "Test"
    runs-on: ubuntu-latest
    continue-on-error: true
    steps:
    - name: Dump Inputs
      shell: bash
      run: |
        echo "Github: ${{ toJson(inputs) }}"

    - uses: actions/checkout@v3.1.0
      with:
        # Fetch history for all branches and tags
        fetch-depth: 0

    - name: Check if commit is a hotfix
      id: check-commit
      shell: bash
      run: |
        REPO_ROOT=$(git rev-parse --show-toplevel)
        echo "is_hotfix=$($REPO_ROOT/scripts/release/is-hotfix.sh ${GITHUB_SHA})" >> $GITHUB_OUTPUT

    - name: Test
      if: steps.check-commit.outputs.is_hotfix != '1' || inputs.gh_env != 'dev'
      # continue to deploy if testing fails
      run: |
        exit 1
